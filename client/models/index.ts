/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import {
  type AdditionalDataHolder,
  type ApiError,
  type Parsable,
  type ParseNode,
  type SerializationWriter,
} from "@microsoft/kiota-abstractions";

export interface AddressReq extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * 市区町村コード
   */
  cityCode?: string | null;
  /**
   * 市区町村名カナ
   */
  cityKana?: string | null;
  /**
   * 市区町村名
   */
  cityName?: string | null;
  /**
   * 市区町村名ローマ字
   */
  cityRoma?: string | null;
  /**
   * 市区町村一覧のみ取得フラグ (デフォルト値:0、 0:すべての情報を取得、1:市区町村のみの情報を取得)
   */
  flgGetcity?: number | null;
  /**
   * 都道府県一覧のみ取得フラグ (デフォルト値:0、0:すべての情報を取得、1:都道府県のみの情報を取得)
   */
  flgGetpref?: number | null;
  /**
   * フリーワード
   */
  freeword?: string | null;
  /**
   * 取得最大レコード数 (デフォルト値:1000、最大値:1000)
   */
  limit?: number | null;
  /**
   * ページ数 (デフォルト値:1)
   */
  page?: number | null;
  /**
   * 都道府県コード
   */
  prefCode?: string | null;
  /**
   * 都道府県名カナ
   */
  prefKana?: string | null;
  /**
   * 都道府県名
   */
  prefName?: string | null;
  /**
   * 都道府県名ローマ字
   */
  prefRoma?: string | null;
  /**
   * 町域カナ
   */
  townKana?: string | null;
  /**
   * 町域
   */
  townName?: string | null;
  /**
   * 町域ローマ字
   */
  townRoma?: string | null;
}
export interface AddressRes extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * The addresses property
   */
  addresses?: AddressRes_addresses_inner[] | null;
  /**
   * 該当データ数
   */
  count?: number | null;
  /**
   * マッチングレベル
   */
  level?: number | null;
  /**
   * 取得最大レコード数
   */
  limit?: number | null;
  /**
   * ページ数
   */
  page?: number | null;
}
export interface AddressRes_addresses_inner
  extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * The city_code property
   */
  cityCode?: string | null;
  /**
   * The city_kana property
   */
  cityKana?: string | null;
  /**
   * The city_name property
   */
  cityName?: string | null;
  /**
   * The city_roma property
   */
  cityRoma?: string | null;
  /**
   * The pref_code property
   */
  prefCode?: string | null;
  /**
   * The pref_kana property
   */
  prefKana?: string | null;
  /**
   * The pref_name property
   */
  prefName?: string | null;
  /**
   * The pref_roma property
   */
  prefRoma?: string | null;
  /**
   * The town_kana property
   */
  townKana?: string | null;
  /**
   * The town_name property
   */
  townName?: string | null;
  /**
   * The town_roma property
   */
  townRoma?: string | null;
  /**
   * The zip_code property
   */
  zipCode?: string | null;
}
export interface BadRequest extends AdditionalDataHolder, ApiError, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * エラーコード
   */
  errorCode?: string | null;
  /**
   * エラーメッセージ
   */
  messageEscaped?: string | null;
  /**
   * 問合せID (追跡コード)
   */
  requestId?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddressReq}
 */
// @ts-ignore
export function createAddressReqFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoAddressReq;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddressRes_addresses_inner}
 */
// @ts-ignore
export function createAddressRes_addresses_innerFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoAddressRes_addresses_inner;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddressRes}
 */
// @ts-ignore
export function createAddressResFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoAddressRes;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BadRequest}
 */
// @ts-ignore
export function createBadRequestFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoBadRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ErrorEscaped}
 */
// @ts-ignore
export function createErrorEscapedFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoErrorEscaped;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Forbidden}
 */
// @ts-ignore
export function createForbiddenFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoForbidden;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {JtokenReq}
 */
// @ts-ignore
export function createJtokenReqFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoJtokenReq;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {JtokenRes}
 */
// @ts-ignore
export function createJtokenResFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoJtokenRes;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NotFound}
 */
// @ts-ignore
export function createNotFoundFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoNotFound;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchcodeSearchRes_addresses_inner}
 */
// @ts-ignore
export function createSearchcodeSearchRes_addresses_innerFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoSearchcodeSearchRes_addresses_inner;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchcodeSearchRes}
 */
// @ts-ignore
export function createSearchcodeSearchResFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoSearchcodeSearchRes;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Unauthorized}
 */
// @ts-ignore
export function createUnauthorizedFromDiscriminatorValue(
  parseNode: ParseNode | undefined,
): (instance?: Parsable) => Record<string, (node: ParseNode) => void> {
  return deserializeIntoUnauthorized;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddressReq(
  addressReq: Partial<AddressReq> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "city_code": (n) => {
      addressReq.cityCode = n.getStringValue();
    },
    "city_kana": (n) => {
      addressReq.cityKana = n.getStringValue();
    },
    "city_name": (n) => {
      addressReq.cityName = n.getStringValue();
    },
    "city_roma": (n) => {
      addressReq.cityRoma = n.getStringValue();
    },
    "flg_getcity": (n) => {
      addressReq.flgGetcity = n.getNumberValue();
    },
    "flg_getpref": (n) => {
      addressReq.flgGetpref = n.getNumberValue();
    },
    "freeword": (n) => {
      addressReq.freeword = n.getStringValue();
    },
    "limit": (n) => {
      addressReq.limit = n.getNumberValue();
    },
    "page": (n) => {
      addressReq.page = n.getNumberValue();
    },
    "pref_code": (n) => {
      addressReq.prefCode = n.getStringValue();
    },
    "pref_kana": (n) => {
      addressReq.prefKana = n.getStringValue();
    },
    "pref_name": (n) => {
      addressReq.prefName = n.getStringValue();
    },
    "pref_roma": (n) => {
      addressReq.prefRoma = n.getStringValue();
    },
    "town_kana": (n) => {
      addressReq.townKana = n.getStringValue();
    },
    "town_name": (n) => {
      addressReq.townName = n.getStringValue();
    },
    "town_roma": (n) => {
      addressReq.townRoma = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddressRes(
  addressRes: Partial<AddressRes> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "addresses": (n) => {
      addressRes.addresses = n.getCollectionOfObjectValues<
        AddressRes_addresses_inner
      >(createAddressRes_addresses_innerFromDiscriminatorValue);
    },
    "count": (n) => {
      addressRes.count = n.getNumberValue();
    },
    "level": (n) => {
      addressRes.level = n.getNumberValue();
    },
    "limit": (n) => {
      addressRes.limit = n.getNumberValue();
    },
    "page": (n) => {
      addressRes.page = n.getNumberValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddressRes_addresses_inner(
  addressRes_addresses_inner: Partial<AddressRes_addresses_inner> | undefined =
    {},
): Record<string, (node: ParseNode) => void> {
  return {
    "city_code": (n) => {
      addressRes_addresses_inner.cityCode = n.getStringValue();
    },
    "city_kana": (n) => {
      addressRes_addresses_inner.cityKana = n.getStringValue();
    },
    "city_name": (n) => {
      addressRes_addresses_inner.cityName = n.getStringValue();
    },
    "city_roma": (n) => {
      addressRes_addresses_inner.cityRoma = n.getStringValue();
    },
    "pref_code": (n) => {
      addressRes_addresses_inner.prefCode = n.getStringValue();
    },
    "pref_kana": (n) => {
      addressRes_addresses_inner.prefKana = n.getStringValue();
    },
    "pref_name": (n) => {
      addressRes_addresses_inner.prefName = n.getStringValue();
    },
    "pref_roma": (n) => {
      addressRes_addresses_inner.prefRoma = n.getStringValue();
    },
    "town_kana": (n) => {
      addressRes_addresses_inner.townKana = n.getStringValue();
    },
    "town_name": (n) => {
      addressRes_addresses_inner.townName = n.getStringValue();
    },
    "town_roma": (n) => {
      addressRes_addresses_inner.townRoma = n.getStringValue();
    },
    "zip_code": (n) => {
      addressRes_addresses_inner.zipCode = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBadRequest(
  badRequest: Partial<BadRequest> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "error_code": (n) => {
      badRequest.errorCode = n.getStringValue();
    },
    "message": (n) => {
      badRequest.messageEscaped = n.getStringValue();
    },
    "request_id": (n) => {
      badRequest.requestId = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoErrorEscaped(
  errorEscaped: Partial<ErrorEscaped> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "error_code": (n) => {
      errorEscaped.errorCode = n.getStringValue();
    },
    "message": (n) => {
      errorEscaped.messageEscaped = n.getStringValue();
    },
    "request_id": (n) => {
      errorEscaped.requestId = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoForbidden(
  forbidden: Partial<Forbidden> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "error_code": (n) => {
      forbidden.errorCode = n.getStringValue();
    },
    "message": (n) => {
      forbidden.messageEscaped = n.getStringValue();
    },
    "request_id": (n) => {
      forbidden.requestId = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJtokenReq(
  jtokenReq: Partial<JtokenReq> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "client_id": (n) => {
      jtokenReq.clientId = n.getStringValue();
    },
    "grant_type": (n) => {
      jtokenReq.grantType = n.getStringValue();
    },
    "secret_key": (n) => {
      jtokenReq.secretKey = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJtokenRes(
  jtokenRes: Partial<JtokenRes> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "expires_in": (n) => {
      jtokenRes.expiresIn = n.getNumberValue();
    },
    "scope": (n) => {
      jtokenRes.scope = n.getStringValue();
    },
    "token": (n) => {
      jtokenRes.token = n.getStringValue();
    },
    "token_type": (n) => {
      jtokenRes.tokenType = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNotFound(
  notFound: Partial<NotFound> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "error_code": (n) => {
      notFound.errorCode = n.getStringValue();
    },
    "message": (n) => {
      notFound.messageEscaped = n.getStringValue();
    },
    "request_id": (n) => {
      notFound.requestId = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchcodeSearchRes(
  searchcodeSearchRes: Partial<SearchcodeSearchRes> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "addresses": (n) => {
      searchcodeSearchRes.addresses = n.getCollectionOfObjectValues<
        SearchcodeSearchRes_addresses_inner
      >(createSearchcodeSearchRes_addresses_innerFromDiscriminatorValue);
    },
    "count": (n) => {
      searchcodeSearchRes.count = n.getNumberValue();
    },
    "limit": (n) => {
      searchcodeSearchRes.limit = n.getNumberValue();
    },
    "page": (n) => {
      searchcodeSearchRes.page = n.getNumberValue();
    },
    "searchtype": (n) => {
      searchcodeSearchRes.searchtype = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchcodeSearchRes_addresses_inner(
  searchcodeSearchRes_addresses_inner:
    | Partial<SearchcodeSearchRes_addresses_inner>
    | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "address": (n) => {
      searchcodeSearchRes_addresses_inner.address = n.getStringValue();
    },
    "biz_kana": (n) => {
      searchcodeSearchRes_addresses_inner.bizKana = n.getStringValue();
    },
    "biz_name": (n) => {
      searchcodeSearchRes_addresses_inner.bizName = n.getStringValue();
    },
    "biz_roma": (n) => {
      searchcodeSearchRes_addresses_inner.bizRoma = n.getStringValue();
    },
    "block_name": (n) => {
      searchcodeSearchRes_addresses_inner.blockName = n.getStringValue();
    },
    "city_code": (n) => {
      searchcodeSearchRes_addresses_inner.cityCode = n.getStringValue();
    },
    "city_kana": (n) => {
      searchcodeSearchRes_addresses_inner.cityKana = n.getStringValue();
    },
    "city_name": (n) => {
      searchcodeSearchRes_addresses_inner.cityName = n.getStringValue();
    },
    "city_roma": (n) => {
      searchcodeSearchRes_addresses_inner.cityRoma = n.getStringValue();
    },
    "dgacode": (n) => {
      searchcodeSearchRes_addresses_inner.dgacode = n.getStringValue();
    },
    "latitude": (n) => {
      searchcodeSearchRes_addresses_inner.latitude = n.getNumberValue();
    },
    "longitude": (n) => {
      searchcodeSearchRes_addresses_inner.longitude = n.getNumberValue();
    },
    "other_name": (n) => {
      searchcodeSearchRes_addresses_inner.otherName = n.getStringValue();
    },
    "pref_code": (n) => {
      searchcodeSearchRes_addresses_inner.prefCode = n.getStringValue();
    },
    "pref_kana": (n) => {
      searchcodeSearchRes_addresses_inner.prefKana = n.getStringValue();
    },
    "pref_name": (n) => {
      searchcodeSearchRes_addresses_inner.prefName = n.getStringValue();
    },
    "pref_roma": (n) => {
      searchcodeSearchRes_addresses_inner.prefRoma = n.getStringValue();
    },
    "town_kana": (n) => {
      searchcodeSearchRes_addresses_inner.townKana = n.getStringValue();
    },
    "town_name": (n) => {
      searchcodeSearchRes_addresses_inner.townName = n.getStringValue();
    },
    "town_roma": (n) => {
      searchcodeSearchRes_addresses_inner.townRoma = n.getStringValue();
    },
    "zip_code": (n) => {
      searchcodeSearchRes_addresses_inner.zipCode = n.getStringValue();
    },
  };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnauthorized(
  unauthorized: Partial<Unauthorized> | undefined = {},
): Record<string, (node: ParseNode) => void> {
  return {
    "error_code": (n) => {
      unauthorized.errorCode = n.getStringValue();
    },
    "message": (n) => {
      unauthorized.messageEscaped = n.getStringValue();
    },
    "request_id": (n) => {
      unauthorized.requestId = n.getStringValue();
    },
  };
}
export interface ErrorEscaped extends AdditionalDataHolder, ApiError, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * エラーコード
   */
  errorCode?: string | null;
  /**
   * エラーメッセージ
   */
  messageEscaped?: string | null;
  /**
   * 問合せID (追跡コード)
   */
  requestId?: string | null;
}
export interface Forbidden extends AdditionalDataHolder, ApiError, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * エラーコード
   */
  errorCode?: string | null;
  /**
   * エラーメッセージ
   */
  messageEscaped?: string | null;
  /**
   * 問合せID (追跡コード)
   */
  requestId?: string | null;
}
export interface JtokenReq extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * クライアントID
   */
  clientId?: string | null;
  /**
   * grant_type (「client_credentials」で固定)
   */
  grantType?: string | null;
  /**
   * シークレットキー
   */
  secretKey?: string | null;
}
export interface JtokenRes extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * 有効秒数
   */
  expiresIn?: number | null;
  /**
   * スコープ
   */
  scope?: string | null;
  /**
   * アクセストークン
   */
  token?: string | null;
  /**
   * トークンタイプ
   */
  tokenType?: string | null;
}
export interface NotFound extends AdditionalDataHolder, ApiError, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * エラーコード
   */
  errorCode?: string | null;
  /**
   * エラーメッセージ
   */
  messageEscaped?: string | null;
  /**
   * 問合せID (追跡コード)
   */
  requestId?: string | null;
}
export interface SearchcodeSearchRes extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * The addresses property
   */
  addresses?: SearchcodeSearchRes_addresses_inner[] | null;
  /**
   * 該当データ数
   */
  count?: number | null;
  /**
   * 取得最大レコード数 (デフォルト値:1000、最大値:1000)
   */
  limit?: number | null;
  /**
   * ページ数 (デフォルト値:1)
   */
  page?: number | null;
  /**
   * 検索タイプ (dgacode/zipcode/bizzipcodeのいずれか)
   */
  searchtype?: string | null;
}
export interface SearchcodeSearchRes_addresses_inner
  extends AdditionalDataHolder, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * The address property
   */
  address?: string | null;
  /**
   * The biz_kana property
   */
  bizKana?: string | null;
  /**
   * The biz_name property
   */
  bizName?: string | null;
  /**
   * The biz_roma property
   */
  bizRoma?: string | null;
  /**
   * The block_name property
   */
  blockName?: string | null;
  /**
   * The city_code property
   */
  cityCode?: string | null;
  /**
   * The city_kana property
   */
  cityKana?: string | null;
  /**
   * The city_name property
   */
  cityName?: string | null;
  /**
   * The city_roma property
   */
  cityRoma?: string | null;
  /**
   * The dgacode property
   */
  dgacode?: string | null;
  /**
   * The latitude property
   */
  latitude?: number | null;
  /**
   * The longitude property
   */
  longitude?: number | null;
  /**
   * The other_name property
   */
  otherName?: string | null;
  /**
   * The pref_code property
   */
  prefCode?: string | null;
  /**
   * The pref_kana property
   */
  prefKana?: string | null;
  /**
   * The pref_name property
   */
  prefName?: string | null;
  /**
   * The pref_roma property
   */
  prefRoma?: string | null;
  /**
   * The town_kana property
   */
  townKana?: string | null;
  /**
   * The town_name property
   */
  townName?: string | null;
  /**
   * The town_roma property
   */
  townRoma?: string | null;
  /**
   * The zip_code property
   */
  zipCode?: string | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddressReq(
  writer: SerializationWriter,
  addressReq: Partial<AddressReq> | undefined | null = {},
): void {
  if (addressReq) {
    writer.writeStringValue("city_code", addressReq.cityCode);
    writer.writeStringValue("city_kana", addressReq.cityKana);
    writer.writeStringValue("city_name", addressReq.cityName);
    writer.writeStringValue("city_roma", addressReq.cityRoma);
    writer.writeNumberValue("flg_getcity", addressReq.flgGetcity);
    writer.writeNumberValue("flg_getpref", addressReq.flgGetpref);
    writer.writeStringValue("freeword", addressReq.freeword);
    writer.writeNumberValue("limit", addressReq.limit);
    writer.writeNumberValue("page", addressReq.page);
    writer.writeStringValue("pref_code", addressReq.prefCode);
    writer.writeStringValue("pref_kana", addressReq.prefKana);
    writer.writeStringValue("pref_name", addressReq.prefName);
    writer.writeStringValue("pref_roma", addressReq.prefRoma);
    writer.writeStringValue("town_kana", addressReq.townKana);
    writer.writeStringValue("town_name", addressReq.townName);
    writer.writeStringValue("town_roma", addressReq.townRoma);
    writer.writeAdditionalData(addressReq.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddressRes(
  writer: SerializationWriter,
  addressRes: Partial<AddressRes> | undefined | null = {},
): void {
  if (addressRes) {
    writer.writeCollectionOfObjectValues<AddressRes_addresses_inner>(
      "addresses",
      addressRes.addresses,
      serializeAddressRes_addresses_inner,
    );
    writer.writeNumberValue("count", addressRes.count);
    writer.writeNumberValue("level", addressRes.level);
    writer.writeNumberValue("limit", addressRes.limit);
    writer.writeNumberValue("page", addressRes.page);
    writer.writeAdditionalData(addressRes.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddressRes_addresses_inner(
  writer: SerializationWriter,
  addressRes_addresses_inner:
    | Partial<AddressRes_addresses_inner>
    | undefined
    | null = {},
): void {
  if (addressRes_addresses_inner) {
    writer.writeStringValue("city_code", addressRes_addresses_inner.cityCode);
    writer.writeStringValue("city_kana", addressRes_addresses_inner.cityKana);
    writer.writeStringValue("city_name", addressRes_addresses_inner.cityName);
    writer.writeStringValue("city_roma", addressRes_addresses_inner.cityRoma);
    writer.writeStringValue("pref_code", addressRes_addresses_inner.prefCode);
    writer.writeStringValue("pref_kana", addressRes_addresses_inner.prefKana);
    writer.writeStringValue("pref_name", addressRes_addresses_inner.prefName);
    writer.writeStringValue("pref_roma", addressRes_addresses_inner.prefRoma);
    writer.writeStringValue("town_kana", addressRes_addresses_inner.townKana);
    writer.writeStringValue("town_name", addressRes_addresses_inner.townName);
    writer.writeStringValue("town_roma", addressRes_addresses_inner.townRoma);
    writer.writeStringValue("zip_code", addressRes_addresses_inner.zipCode);
    writer.writeAdditionalData(addressRes_addresses_inner.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBadRequest(
  writer: SerializationWriter,
  badRequest: Partial<BadRequest> | undefined | null = {},
): void {
  if (badRequest) {
    writer.writeStringValue("error_code", badRequest.errorCode);
    writer.writeStringValue("message", badRequest.messageEscaped);
    writer.writeStringValue("request_id", badRequest.requestId);
    writer.writeAdditionalData(badRequest.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeErrorEscaped(
  writer: SerializationWriter,
  errorEscaped: Partial<ErrorEscaped> | undefined | null = {},
): void {
  if (errorEscaped) {
    writer.writeStringValue("error_code", errorEscaped.errorCode);
    writer.writeStringValue("message", errorEscaped.messageEscaped);
    writer.writeStringValue("request_id", errorEscaped.requestId);
    writer.writeAdditionalData(errorEscaped.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeForbidden(
  writer: SerializationWriter,
  forbidden: Partial<Forbidden> | undefined | null = {},
): void {
  if (forbidden) {
    writer.writeStringValue("error_code", forbidden.errorCode);
    writer.writeStringValue("message", forbidden.messageEscaped);
    writer.writeStringValue("request_id", forbidden.requestId);
    writer.writeAdditionalData(forbidden.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJtokenReq(
  writer: SerializationWriter,
  jtokenReq: Partial<JtokenReq> | undefined | null = {},
): void {
  if (jtokenReq) {
    writer.writeStringValue("client_id", jtokenReq.clientId);
    writer.writeStringValue("grant_type", jtokenReq.grantType);
    writer.writeStringValue("secret_key", jtokenReq.secretKey);
    writer.writeAdditionalData(jtokenReq.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJtokenRes(
  writer: SerializationWriter,
  jtokenRes: Partial<JtokenRes> | undefined | null = {},
): void {
  if (jtokenRes) {
    writer.writeNumberValue("expires_in", jtokenRes.expiresIn);
    writer.writeStringValue("scope", jtokenRes.scope);
    writer.writeStringValue("token", jtokenRes.token);
    writer.writeStringValue("token_type", jtokenRes.tokenType);
    writer.writeAdditionalData(jtokenRes.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNotFound(
  writer: SerializationWriter,
  notFound: Partial<NotFound> | undefined | null = {},
): void {
  if (notFound) {
    writer.writeStringValue("error_code", notFound.errorCode);
    writer.writeStringValue("message", notFound.messageEscaped);
    writer.writeStringValue("request_id", notFound.requestId);
    writer.writeAdditionalData(notFound.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchcodeSearchRes(
  writer: SerializationWriter,
  searchcodeSearchRes: Partial<SearchcodeSearchRes> | undefined | null = {},
): void {
  if (searchcodeSearchRes) {
    writer.writeCollectionOfObjectValues<SearchcodeSearchRes_addresses_inner>(
      "addresses",
      searchcodeSearchRes.addresses,
      serializeSearchcodeSearchRes_addresses_inner,
    );
    writer.writeNumberValue("count", searchcodeSearchRes.count);
    writer.writeNumberValue("limit", searchcodeSearchRes.limit);
    writer.writeNumberValue("page", searchcodeSearchRes.page);
    writer.writeStringValue("searchtype", searchcodeSearchRes.searchtype);
    writer.writeAdditionalData(searchcodeSearchRes.additionalData);
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchcodeSearchRes_addresses_inner(
  writer: SerializationWriter,
  searchcodeSearchRes_addresses_inner:
    | Partial<SearchcodeSearchRes_addresses_inner>
    | undefined
    | null = {},
): void {
  if (searchcodeSearchRes_addresses_inner) {
    writer.writeStringValue(
      "address",
      searchcodeSearchRes_addresses_inner.address,
    );
    writer.writeStringValue(
      "biz_kana",
      searchcodeSearchRes_addresses_inner.bizKana,
    );
    writer.writeStringValue(
      "biz_name",
      searchcodeSearchRes_addresses_inner.bizName,
    );
    writer.writeStringValue(
      "biz_roma",
      searchcodeSearchRes_addresses_inner.bizRoma,
    );
    writer.writeStringValue(
      "block_name",
      searchcodeSearchRes_addresses_inner.blockName,
    );
    writer.writeStringValue(
      "city_code",
      searchcodeSearchRes_addresses_inner.cityCode,
    );
    writer.writeStringValue(
      "city_kana",
      searchcodeSearchRes_addresses_inner.cityKana,
    );
    writer.writeStringValue(
      "city_name",
      searchcodeSearchRes_addresses_inner.cityName,
    );
    writer.writeStringValue(
      "city_roma",
      searchcodeSearchRes_addresses_inner.cityRoma,
    );
    writer.writeStringValue(
      "dgacode",
      searchcodeSearchRes_addresses_inner.dgacode,
    );
    writer.writeNumberValue(
      "latitude",
      searchcodeSearchRes_addresses_inner.latitude,
    );
    writer.writeNumberValue(
      "longitude",
      searchcodeSearchRes_addresses_inner.longitude,
    );
    writer.writeStringValue(
      "other_name",
      searchcodeSearchRes_addresses_inner.otherName,
    );
    writer.writeStringValue(
      "pref_code",
      searchcodeSearchRes_addresses_inner.prefCode,
    );
    writer.writeStringValue(
      "pref_kana",
      searchcodeSearchRes_addresses_inner.prefKana,
    );
    writer.writeStringValue(
      "pref_name",
      searchcodeSearchRes_addresses_inner.prefName,
    );
    writer.writeStringValue(
      "pref_roma",
      searchcodeSearchRes_addresses_inner.prefRoma,
    );
    writer.writeStringValue(
      "town_kana",
      searchcodeSearchRes_addresses_inner.townKana,
    );
    writer.writeStringValue(
      "town_name",
      searchcodeSearchRes_addresses_inner.townName,
    );
    writer.writeStringValue(
      "town_roma",
      searchcodeSearchRes_addresses_inner.townRoma,
    );
    writer.writeStringValue(
      "zip_code",
      searchcodeSearchRes_addresses_inner.zipCode,
    );
    writer.writeAdditionalData(
      searchcodeSearchRes_addresses_inner.additionalData,
    );
  }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnauthorized(
  writer: SerializationWriter,
  unauthorized: Partial<Unauthorized> | undefined | null = {},
): void {
  if (unauthorized) {
    writer.writeStringValue("error_code", unauthorized.errorCode);
    writer.writeStringValue("message", unauthorized.messageEscaped);
    writer.writeStringValue("request_id", unauthorized.requestId);
    writer.writeAdditionalData(unauthorized.additionalData);
  }
}
export interface Unauthorized extends AdditionalDataHolder, ApiError, Parsable {
  /**
   * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
   */
  additionalData?: Record<string, unknown>;
  /**
   * エラーコード
   */
  errorCode?: string | null;
  /**
   * エラーメッセージ
   */
  messageEscaped?: string | null;
  /**
   * 問合せID (追跡コード)
   */
  requestId?: string | null;
}
/* tslint:enable */
/* eslint-enable */
